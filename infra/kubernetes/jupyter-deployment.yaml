apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter
  namespace: dataplatform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter
  template:
    metadata:
      labels:
        app: jupyter
    spec:
      containers:
      - name: jupyter
        image: dataplatform/jupyter:latest
        ports:
        - containerPort: 8888
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        volumeMounts:
        - name: notebook-storage
          mountPath: /home/jovyan/work/notebooks
        - name: data-volume
          mountPath: /home/jovyan/work/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: notebook-storage
        persistentVolumeClaim:
          claimName: jupyter-pvc
      - name: data-volume
        configMap:
          name: data-config
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-service
  namespace: dataplatform
spec:
  selector:
    app: jupyter
  ports:
  - port: 8888
    targetPort: 8888
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-pvc
  namespace: dataplatform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jupyter-ingress
  namespace: dataplatform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  rules:
  - host: jupyter.dataplatform.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jupyter-service
            port:
              number: 8888